<?xml version="1.0" encoding="UTF-8"?>
<!--
/*******************************************************************************
 * Copyright (c) 2013 University of Stuttgart.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and the Apache License 2.0 which both accompany this distribution,
 * and are available at http://www.eclipse.org/legal/epl-v10.html
 * and http://www.apache.org/licenses/LICENSE-2.0
 *
 * Contributors:
 *	Tobias Unger - initial API and implementation and/or initial documentation
 *	Oliver Kopp - improvements
 *******************************************************************************/
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.winery</groupId>
		<artifactId>winery</artifactId>
		<version>0.1.37-SNAPSHOT</version>
	</parent>
	<artifactId>org.eclipse.winery.topologymodeler</artifactId>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.17.1</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>1.17.1</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>1.17.1</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.eclipse.winery</groupId>
			<artifactId>org.eclipse.winery.repository.client</artifactId>
			<version>0.1.37-SNAPSHOT</version>
			<scope>compile</scope>
			<exclusions>
			<exclusion>
				<artifactId>commons-logging</artifactId>
				<groupId>commons-logging</groupId>
			</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
			<scope>compile</scope>
			<exclusions>
			<exclusion>
				<artifactId>commons-logging</artifactId>
				<groupId>commons-logging</groupId>
			</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.6</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.thetransactioncompany</groupId>
			<artifactId>cors-filter</artifactId>
			<version>2.3</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>true</filtering>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>tags/about.tag</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<dependencies>
					<!--dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-apache-bsf</artifactId>
						<version>1.9.2</version>
					</dependency-->
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>2.1.7</version>
					</dependency>

				</dependencies>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<script language="groovy" manager="javax"> <![CDATA[
									def isWindows = (System.getProperty('os.name').toLowerCase().indexOf("win") >= 0)
									String bowerCommand
									String bowerArguments
									if (isWindows) {
										bowerCommand = 'cmd.exe'
										bowerArguments = '/c bower'
									} else {
										bowerCommand = 'bower'
										bowerArguments = '--allow-root'
									}
									project.setProperty('bowerCommand', bowerCommand)
									project.setProperty('bowerArguments', bowerArguments)
								]]></script>

								<echo message="Bower command: ${bowerCommand} ${bowerArguments} prune" />
								<exec executable="${bowerCommand}" outputproperty="bower.cmdOut" errorproperty="bower.cmdErr" resultproperty="bower.cmdExit" failonerror="true" dir="${basedir}" searchpath="true">
									<arg line="${bowerArguments} prune" />
								</exec>
								<echo message="bower.cmdOut: ${bower.cmdOut}" />
								<echo message="bower.cmdErr: ${bower.cmdErr}" level="error" />
								<echo message="bower.cmdExit: ${bower.cmdExit}" />

								<echo message="Bower command: ${bowerCommand} ${bowerArguments} update" />
								<exec executable="${bowerCommand}" outputproperty="bower.cmdOut" errorproperty="bower.cmdErr" resultproperty="bower.cmdExit" failonerror="true" dir="${basedir}" searchpath="true">
									<arg line="${bowerArguments} update" />
								</exec>
								<echo message="bower.cmdOut: ${bower.cmdOut}" />
								<echo message="bower.cmdErr: ${bower.cmdErr}" level="error" />
								<echo message="bower.cmdExit: ${bower.cmdExit}" />

								<echo message="Bower command: ${bowerCommand} ${bowerArguments} install" />
								<exec executable="${bowerCommand}" outputproperty="bower.cmdOut" errorproperty="bower.cmdErr" resultproperty="bower.cmdExit" failonerror="true" dir="${basedir}" searchpath="true">
									<arg line="${bowerArguments} install" />
								</exec>
								<echo message="bower.cmdOut: ${bower.cmdOut}" />
								<echo message="bower.cmdErr: ${bower.cmdErr}" level="error" />
								<echo message="bower.cmdExit: ${bower.cmdExit}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<finalName>winery-topologymodeler</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- hint by http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
