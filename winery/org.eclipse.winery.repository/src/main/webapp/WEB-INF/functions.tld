<?xml version="1.0" encoding="UTF-8" ?>
<!--
/*******************************************************************************
 * Copyright (c) 2012-2013 University of Stuttgart.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and the Apache License 2.0 which both accompany this distribution,
 * and are available at http://www.eclipse.org/legal/epl-v10.html
 * and http://www.apache.org/licenses/LICENSE-2.0
 *
 * Contributors:
 *    Oliver Kopp - initial API and implementation and/or initial documentation
 *******************************************************************************/
-->
<taglib
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
	version="2.1">

	<tlib-version>1.0</tlib-version>
	<short-name>Winery_Repository_Functions</short-name>
	<uri>http://www.eclipse.org/winery/repository/functions</uri>

	<function>
		<name>URLencode</name>
		<function-class>org.eclipse.winery.common.Util</function-class>
		<function-signature>java.lang.String URLencode(java.lang.String)</function-signature>
	</function>
	<function>
		<name>DoubleURLencode</name>
		<function-class>org.eclipse.winery.common.Util</function-class>
		<function-signature>java.lang.String DoubleURLencode(javax.xml.namespace.QName)</function-signature>
	</function>
	<function>
		<name>absoluteURL</name>
		<function-class> org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String getAbsoluteURL(org.eclipse.winery.common.ids.GenericId)</function-signature>
	</function>
	<function>
		<name>allNamespaces</name>
		<function-class>org.eclipse.winery.repository.resources.admin.NamespacesResource</function-class>
		<function-signature>java.util.Collection getNamespaces()</function-signature>
	</function>
	<function>
		<name>allNodeTypeResources</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.util.Collection getAllNodeTypeResources()</function-signature>
	</function>
	<function>
		<name>allRelationshipTypeResources</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.util.Collection getAllRelationshipTypeResources()</function-signature>
	</function>
	<function>
		<name>determineIdUsingHashCode</name>
		<function-class>org.eclipse.winery.repository.resources._support.collections.withoutid.IdDeterminationWithHashCode</function-class>
		<function-signature>java.lang.String getIdStatically(java.lang.Object)</function-signature>
	</function>
	<function>
		<name>isContainerLocallyAvailable</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.Boolean isContainerLocallyAvailable()</function-signature>
	</function>
	<function>
		<name>isRestDocDocumentationAvailable</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.Boolean isRestDocDocumentationAvailable()</function-signature>
	</function>
	<function>
		<name>namespace</name>
		<function-class>org.eclipse.winery.common.ids.IdUtil</function-class>
		<function-signature>org.eclipse.winery.common.ids.Namespace getNamespace(org.eclipse.winery.common.ids.GenericId)</function-signature>
	</function>
	<function>
		<name>namespaceToJavaPackage</name>
		<function-class>org.eclipse.winery.common.Util</function-class>
		<function-signature>java.lang.String namespaceToJavaPackage(java.lang.String)</function-signature>
	</function>
	<function>
		<name>artifactTypeQName2href</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String artifactTypeQName2href(javax.xml.namespace.QName)</function-signature>
	</function>
	<function>
		<name>nodeTypeQName2href</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String nodeTypeQName2href(javax.xml.namespace.QName)</function-signature>
	</function>
	<function>
		<name>policyTypeQName2href</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String policyTypeQName2href(javax.xml.namespace.QName)</function-signature>
	</function>
	<function>
		<name>relationshipTypeQName2href</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String relationshipTypeQName2href(javax.xml.namespace.QName)</function-signature>
	</function>
	<function>
		<name>getPrefix</name>
		<function-class>org.eclipse.winery.repository.resources.admin.NamespacesResource</function-class>
		<function-signature>java.lang.String getPrefix(java.lang.String)</function-signature>
	</function>
	<function>
		<name>typeForTemplate</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>org.eclipse.winery.model.tosca.TEntityType getTypeForTemplate(org.eclipse.winery.model.tosca.TEntityTemplate)</function-signature>
	</function>

	<function>
		<name>renderMaxInstances</name>
		<function-class>org.eclipse.winery.common.Util</function-class>
		<function-signature>java.lang.String renderMaxInstances(java.lang.String)</function-signature>
	</function>
	<function>
		<name>renderMinInstances</name>
		<function-class>org.eclipse.winery.common.Util</function-class>
		<function-signature>java.lang.String renderMinInstances(java.lang.Integer)</function-signature>
	</function>
	<function>
		<name>topologyModelerURI</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String getWineryTopologyModelerPath()</function-signature>
	</function>
	<function>
		<name>allXSDElementDefinitionsForTypeAheadSelection</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String getAllXSDElementDefinitionsForTypeAheadSelection()</function-signature>
	</function>
	<function>
		<name>allXSDTypeDefinitionsForTypeAheadSelection</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String getAllXSDTypeDefinitionsForTypeAheadSelection()</function-signature>
	</function>

	<function>
		<name>doubleEscapeHTMLAndThenConvertNL2BR</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String doubleEscapeHTMLAndThenConvertNL2BR(java.lang.String)</function-signature>
	</function>
	<function>
		<name>XML</name>
		<function-class>org.eclipse.winery.repository.Utils</function-class>
		<function-signature>java.lang.String getXMLAsString(java.lang.Object)</function-signature>
	</function>

	<function>
		<name>randomUUID</name>
		<function-class>java.util.UUID</function-class>
		<function-signature>java.util.UUID randomUUID()</function-signature>
	</function>
</taglib>
